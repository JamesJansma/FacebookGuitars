listing_task:
  description: >
    Using your tool to get the listings for guitar. When using the tool make sure to wait for an output before trying anything else.
    The tool once it is finally done running will return a json with "Model", "Price", "Condition"
  expected_output: >
    The output will need to be in the form of a nested json with this structure. With only the Listing Guitars filled out.
    class GuitarData(BaseModel):
      Model: str
      Price: float
      Condition: str

    class ListingJson(BaseModel):
      marketGuitars: List[GuitarData]  
      listingGuitars: List[GuitarData] 
  agent: listing_finder


img_analyze_task:
  description: > 
    Use the provided tool to analyze the images of the listing. Provide the tool the json output from the listing_finder agent. Pass the tool
    the json as a string. The tool will return the same format you 
    put into the function except with the new names. If the new found "Model" says there is not a guitar then delete the entry. If the 
    new entry talks about a model please strip the rest of the entry and only include the model name
  expected_output: >
    An orgonized json of the guitar listing where 'Model', 'Price', 'Condition' is filled out and the new found names are placed. 
  agent: img_comparison

market_task:
  description: >
    Only using the final answer of the prior agent extract the "Model" from the json and insert it into the tool.
    Then you will wait for the tool to return its value before saving that data in a json form. The values returned from 
    the tool will be the market guitars and will be a json of the form 'Model','Price','Condition'.
  expected_output: >
    The output will need to be in the form of a nested json with this structure. 
    class GuitarData(BaseModel):
      Model: str
      Price: float
      Condition: str

    class ListingJson(BaseModel):
      marketGuitars: List[GuitarData]  
      listingGuitars: List[GuitarData] 

    Where marketGuitars are the otuputs from the tool you use and listingGuitars is the information from the previous agent. 

  agent: market_value_finder

comparison_task:
  description: >
    Using the comparison tool give it the json that is the Final Answer of the Guitar market value finder agent. Pass the json into the tool as a string. 
  expected_output: > 
    The output generated by the comparison tool. 
  agent: comparison_agent



